server:
  port: 8101
#Redis cache 过期时间设置
redis:
  cache:
    expiration: 36000000000000000

spring:
  application:
    name: microservice-store-service-user
  datasource:
    url: jdbc:mysql://localhost:3306/store?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: store
    password: store
    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true

#  datasource:
#    driver-class-name: com.mysql.jdbc.Driver
#    username: store
#    password: store
#    url: jdbc:mysql://127.0.0.1/store?characterEncoding=utf-8&useSSL=false

#druid:
#    url: jdbc:mysql://localhost:3306/store?characterEncoding=utf-8
#    driver-class: com.mysql.jdbc.Driver
#    username: store
#    password: store
#    initial-size: 1
#    min-idle: 1
#    max-active: 20
#    test-on-borrow: true
#    max-wait: 60000
#    time-between-eviction-runs-millis: 60000
#    min-evictable-idle-time-millis: 300000
#    validation-query: SELECT 1 FROM DUAL
#    test-While-Idle: true
#    test-on-return: false
#    pool-prepared-statements: false
#    max-pool-prepared-statement-per-connection-size: 20
#    filters: stat,wall,log4j,config
#    connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=true

#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka/
eureka:
  instance:
    #preferIpAddress: true
    #prefer-ip-address: true
    #instance-id: ${spring.cloud.client.ipAddress}:${server.port}
    #instance-id: ${spring.cloud.client.ip_address}:${server.port}
    ##续约更新时间间隔设置5秒，m默认30s
    lease-renewal-interval-in-seconds: 5
    ##续约到期时间10秒，默认是90秒
    lease-expiration-duration-in-seconds: 10
  client:
      service-url:
        defaultZone: http://microservice-store-eureka:8761/eureka/
#mybatis:
#  type-aliases-package: com.application.entity
#  config-locations: classpath:mybatis-config.xml
#  mapper-locations: classpath:mapper/*.xml

mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  typeAliasesPackage: com.store.model
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 1
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true

logging:
  level:
    com.store.mapper: trace

ribbon:
  eureka:
    enabled: true