buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
        springCloudVersion = 'Finchley.M9'
    }
    repositories {
        mavenCentral()
//        mavenLocal()
////        maven{
////            url 'http://localhost:8077/nexus/content/groups/public/'
////        }
//        mavenLocal()
//        maven{
//            url 'http://maven.aliyun.com/nexus/content/groups/public'
//        }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://repo.spring.io/milestone" }

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

// 使用了Maven的中央仓库及Spring自己的仓库（也可以指定其他仓库）
//repositories {
//    //mavenCentral()
//    maven { url "https://repo.spring.io/snapshot" }
//    maven { url "https://repo.spring.io/milestone" }
//    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
//}

//dependencies {
//    compile('org.springframework.boot:spring-boot-starter-actuator')
//    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
//    runtime('org.springframework.boot:spring-boot-devtools')
//    compileOnly('org.projectlombok:lombok')
//    testCompile('org.springframework.boot:spring-boot-starter-test')
//}

// 依赖关系
//dependencies {
//    // Eureka Server
//    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
//
//    // 该依赖用于测试阶段
//    testCompile('org.springframework.boot:spring-boot-starter-test')
//}

//apply plugin: 'java'
//apply plugin: 'org.springframework.boot'

//group = 'com.store'
//version = '0.0.1-SNAPSHOT'

//apply plugin: 'java'
//apply plugin: 'spring-boot'
//apply plugin: 'io.spring.dependency-management'
//
//dependencyManagement {
//    imports {
//        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//    }
//}

configure(allprojects) { project ->
    group = "com.store"
    version = version
//    sourceCompatibility = 1.8
//    targetCompatibility = 1.8

    ext.springCloudVersion          = 'Finchley.M9'
    ext.springBootVersion           = '2.0.0.RELEASE'
    ext.junitVersion                = "4.12"

    apply plugin: "java"
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
//    apply plugin: 'org.springframework.boot'
//    apply plugin: 'org.springframework.boot'
    apply plugin: 'maven'
//    apply plugin: 'spring-boot'



    if (!(name.contains('common'))) {
        apply plugin: 'org.springframework.boot'
    }
//    apply plugin: 'docker'

    repositories {
//        maven { url "http://localhost:8077/nexus/content/groups/public/" }
        mavenLocal()
    }

//    dependencies {
//        if (!(name.contains('common'))) {
//            testCompile("org.springframework.boot:spring-boot-starter-test")
//            testCompile("junit:junit:${junitVersion}")
//        }
//    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"

        }
    }
//    if (!((name.contains('common')) || (name.contains('api'))  || (name == 'microservice-store-cloud'))) {
//        task buildDocker(type: Docker, dependsOn: bootRepackage) {
//            push = true
//            registry = dockerRegistry
//            applicationName = jar.baseName
//            dockerfile = file('Dockerfile')
//            doFirst {
//                copy {
//                    from jar
//                    into stageDir
//                }
//            }
//        }
//    }
//
//    if (name.contains('api')) {
//        tasks.remove(bootRepackage)
//    }

//    dependencies {
//        compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
//
//    }
}

project(":microservice-store-eureka") {
    description = "microservice-store-eureka"

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-eureka-server")
//        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server")
//        compile("org.springframework.cloud:spring-boot-starter-web")

//        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-eureka-server', version: '1.0.0.RELEASE'

//        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-eureka-server', version: '1.4.0.RELEASE'


    }
}

configure(rootProject) {
    description = "microservice.store.cloud"

//    dependencyManagement {
//        imports {
//            mavenBom "io.projectreactor:reactor-bom"
//        }
//        resolutionStrategy {
//            cacheChangingModulesFor 0, 'seconds'
//        }
//        applyMavenExclusions = false
//    }

    // don't publish the default jar for the root project
    configurations.archives.artifacts.clear()

    dependencies {  // for integration tests
//        testCompile(project(":spring-aop"))

    }

//    task buildDocker(type: Docker, dependsOn: bootRepackage) {
//        push = true
//        applicationName = jar.baseName
//        dockerfile = file('Dockerfile')
//        doFirst {
//            copy {
//                from jar
//                into stageDir
//            }
//        }
//    }

}



